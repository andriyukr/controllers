#! /usr/bin/env python

PACKAGE='controllers'

import roslib;
roslib.load_manifest(PACKAGE)

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

trajectory_enum = gen.enum([	gen.const("none", 			int_t, 	0, 	"No command"),
				gen.const("hover", 			int_t, 	1, 	"Hover in (0, 0, 1)"),
				gen.const("user", 			int_t, 	2, 	"Defined by user with (x_d, y_d, z_d)"),
				gen.const("waypoints", 		int_t, 	3, 	"Waypoints from file"),
				gen.const("waypoints_stamped", 	int_t, 	4, 	"Stamped waypoints from file"),
				gen.const("circle", 			int_t, 	5, 	"Circle"),
				#gen.const("smooth_8", 		int_t, 	6, 	"Smooth 8-shape"),
				#gen.const("aggressive_8", 		int_t, 	7, 	"Aggressive 8-shape"),
				gen.const("square", 			int_t, 	8, 	"Square"),
				gen.const("square_waypoints", 	int_t, 	9, 	"Square waypoints"),
				#gen.const("circle_speed", 		int_t, 	10, 	"Circle with variable speed"),
				#gen.const("circle_yaw", 		int_t, 	11, 	"Circle with variable yaw"),
				#gen.const("circle_vertical", 	int_t, 	12, 	"Vertical circucle")
				], "Trajectory type")

#       	Name		Type      	Level	Description				Default 	Min	Max 	Values
gen.add(	"trajectory", 	int_t,		1,	"Trajectory type",			2,		0,	12,	edit_method=trajectory_enum)
gen.add(	"absolute",   	bool_t,	1,    	"Absolute/relative trajectory", 	True)
gen.add(	"speed",   	double_t,	2,    	"Trajectory speed (m/s)", 		1,		0,	10)
gen.add(	"scale",   	double_t,	2,    	"Trrajectory size", 			1,		1,	10)
gen.add(	"x_d",   	double_t,	3,    	"Desired x position",			0,		-10,	10)
gen.add(	"y_d",   	double_t,    	3,    	"Desired y position",			0,		-10,	10)
gen.add(	"z_d", 	double_t,    	3,    	"Desired z position", 			1,		0,	10)
gen.add(	"yaw_d", 	double_t,    	3,    	"Desired yaw orientation", 		0,		0,	360)

exit(gen.generate(PACKAGE, "controllers", "setTrajectory"))
