<?xml version="1.0"?>

<launch>
	<arg name="robotName" value="anafi"/>
	<arg name="controller" value="fm"/> <!-- pid, t1flc, si_it2_flc, di_it2_flc, fnn, fm -->
	<arg name="indoor" default="true"/>
	<arg name="skycontroller" default="true"/>

	<env name="ROSCONSOLE_FORMAT" value="[${severity}] [${time}] [${node}]: ${message}"/>
	
	<param name="indoor" type="boolean" value="$(arg indoor)" />
	<param name="skycontroller" type="boolean" value="$(arg skycontroller)" />
	<param name="safe_anafi/bounds/x_min" type="double" value="-5.0" />
	<param name="safe_anafi/bounds/x_max" type="double" value="5.0" />
	<param name="safe_anafi/bounds/y_min" type="double" value="-5.0" />
	<param name="safe_anafi/bounds/y_max" type="double" value="5.0" />
	<param name="safe_anafi/bounds/z_min" type="double" value="0.0" />
	<param name="safe_anafi/bounds/z_max" type="double" value="3.0" />

	<remap from="/uav/command" to="/$(arg robotName)/command"/>
	<remap from="/uav/command_velocity" to="/$(arg robotName)/command_velocity"/>
	<remap from="/uav/command_velocity_keyboard" to="/$(arg robotName)/command_velocity"/>
	<remap from="/uav/position" to="/$(arg robotName)/position"/>
	<remap from="/uav/pose" to="/$(arg robotName)/pose"/>
	<remap from="/uav/velocity" to="/$(arg robotName)/linear_velocity"/>
	<remap from="/uav/odometry" to="/$(arg robotName)/odometry"/>
	<remap from="/uav/true_odometry" to="/$(arg robotName)/ground_truth/odometry"/>
	<remap from="/uav/trajectory" to="/$(arg robotName)/trajectory"/>
	<remap from="/uav/trajectory_velocity" to="/$(arg robotName)/trajectory_velocity"/>
	<remap from="/uav/command_camera" to="/$(arg robotName)/command_camera"/>
	<remap from="/aruco_poses" to="/aruco/odometry"/>
	
	<node name="set_anafi_bridge_log_level" pkg="rosservice" type="rosservice" args="call --wait /anafi_bridge/set_logger_level 'rosout' 'info'" />
	<node name="set_trajectory_log_level" pkg="rosservice" type="rosservice" args="call --wait /trajectory/set_logger_level 'ros.controllers' 'info'" />
	<node name="set_teleop_key_log_level" pkg="rosservice" type="rosservice" args="call --wait /teleop_key/set_logger_level 'ros.controllers' 'info'" />
	<node name="set_rviz_log_level" pkg="rosservice" type="rosservice" args="call --wait /rviz/set_logger_level 'ros' 'warn'" />
	
	
	<node name="anafi_bridge" pkg="olympe_bridge" type="anafi_bridge.py" output="screen"/>
	<node name="safe_anafi" pkg="controllers" type="safe_anafi" output="screen" args=""/>
	<!-- Run in the terminal `xset r rate 10 40` to eliminate the delay after the first press of a key.
	Later, run in the terminal `xset r rate 240 40` to reset the default delay. -->
	<node name="teleop_key" pkg="controllers" type="teleop_key" output="screen" args=""/>
	<node name="trajectory" pkg="controllers" type="trajectory" output="screen" args="">
		<param name="file_waypoints" value="$(find controllers)/policy/waypoints.txt" />
		<param name="file_waypoints_stamped" value="$(find controllers)/policy/waypoints_stamped.txt" />
	</node>

	<!-- include file="$(find controllers)/launch/$(arg controller).launch"/ -->
	<!-- include file="$(find aruco_mapping)/launch/aruco_mapping.launch"/ -->

	<node name="rviz" pkg="rviz" type="rviz" output="log" args=""/>
	<node name="rqt_image_view" pkg="rqt_image_view" type="rqt_image_view" args="/$(arg robotName)/image"/>
	
	<!-- Waits 1s before running dynamic_reconfigure -->
	<node name="dynamic_reconfigure" pkg="rqt_reconfigure" type="rqt_reconfigure" output="screen" args="" launch-prefix="bash -c 'sleep 1; $0 $@' " />
</launch>
